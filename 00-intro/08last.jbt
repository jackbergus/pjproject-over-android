\section{Privilegi del superutente, differenze e limitazioni architetturali}\label{sec:rivsupuser}
Come possiamo notare dall'esecuzione della \it{systemcall} \tt{\small uname},
la versione del kernel installata all'interno dell'emulatore Android con 
versione 4.0.3 è la \tt{\small 2.6.36-000064-g8ed501}: possiamo quindi
vedere come il Kernel di Android postponga dei numeri di versione aggiuntivi,
che la distinguono dal Kernel Linux standard.
\medskip

Posso inoltre verificare come, all'interno del sistema Android, siano presenti
dei problemi di configurazione delle interfacce di rete e di come \tt{\small
iptables} sia disponibile, ma non reso fruibile all'utente \parencite{site:marakAndroidInternals}. 
Ho raccolto infatti da più parti il seguente messaggio di errore:
%bash
W/ThrottleService(  178): unable to find stats for iface rmnet0
.%

Dall'analisi del codice sorgente dei \it{framework}, noto che questo errore è 
generato dalla funzione \tt{\small onPollAlarm} di:
%center
\AOSP\tt{\small/framework/base/services/java/com/android/server/ThrottleService.java}
.% 
dove si richiamano le istanze di \tt{\small NetworkStats} generate dalla classe 
\tt{\small NetworkManagerService}. In particolare viene chiamato il metodo
 \tt{\small enforceCallingOrSelfPermission}, il quale a sua volta restituisce 
 il valore del metodo \tt{\small readNetworkStatsSummaryDev} della classe 
 \tt{\small NetworkStatsFactory}. All'interno della funzione si effettua la lettura, 
 tramite classe \tt{\small ProcFileReader} preposta alla lettura del \it{filesystem}
 virtuale \tt{\small /proc}, il file \tt{\small /proc/net/xt\_qtaguid/iface\_stat\_all},
 che però non sembra essere disponibile nell'emulatore con Android 4.0.3, 
 ma presente nel Galaxy Nexus con Android 4.1.
 
 %% TODO: check
 A quanto pare, tale errore si verificherebbe sia nei dispositivi dove tale
 file è assente, sia in dispositivi nei quali, per il momento, non è stata
 attivata tale interfaccia di rete. Inoltre la classe \tt{\small ThrottleService},
 responsabile della generazione del suddetto errore, sarebbe utilizzata unicamente
 dal \tt{\small SystemServer}, che lo inizializza utilizzando il \tt{\small Context}
 corrente e l'interfaccia contenuta all'interno della risorsa \tt{\small R.string.config\_datause\_iface},
 che identifica l'interfaccia di default sulla quale monitorare l'utilizzo dei
 dati. Segue conseguentemente che, quei messaggi, siano frutto di un costante 
 monitoraggio di tale interfaccia, allo scopo di verificare quando questa sia
attivata. Questo mostrerebbe quindi un costante interesse, da parte 
 del sistema, sull'utilizzo dell'interfaccia di rete 3G. Si può infatti notare
 dal file
%center
\AOSP\tt{\small/frameworks/base/core/res/res/values/config.xml}
.%
 la definizione del valore \tt{\small R.string.config\_datause\_iface} come segue:
 %xml
 <string name="config_datause_iface" translatable="false">rmnet0</string>
 .%

Un'ulteriore importante differenza che contraddistingue questo sistema dagli altri
GNU/Linux è la completa assenza del file \tt{\small /etc/passwd}: l'elenco degli
utenti di sistema, dei permessi di accesso al FileSystem è contenuta all'interno
del file:
%center
\AOSP\tt{\small/system/core/include/private/android\_filesystem\_config.h}
.%
Abbiamo quindi che i permessi di sistema vengono compilati all'interno del dispositivo:
da ciò segue che se vogliamo modificare definitivamente l'associazione tra \tt{\small gid}
ed \textsc{Android ID}, come mostrato dall'array:
%clang
static const struct android_id_info android_ids[] = {...};
.%
o del \it{filesystem} come indicato dagli array:
%clang
static struct fs_path_config android_dirs[] = {...};
static struct fs_path_config android_files[] = {...};
.%
si rende necessaria la ricompilazione del Kernel. Un altro file interessante per
quanto riguarda la relazione tra permessi di \tt{\small gid} e permessi richiesti
all'interno del Manifest file per le applicazioni Java o Native JNI è il seguente:
%center
\AOSP\tt{\small/frameworks/base/data/etc/platform.xml}
.%
In quella sede vengono anche descritti quali permessi vengono garantiti alla \it{shell};
possiamo quindi osservare come l'acquisizione dei permessi di root permetta
indirettamente di acquisire tutti i permessi che sarebbero da richiedere all'interno
di un Manifest File.


